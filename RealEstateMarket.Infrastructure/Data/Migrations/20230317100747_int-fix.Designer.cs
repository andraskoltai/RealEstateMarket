// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealEstateMarket.Infrastructure.Data;

#nullable disable

namespace RealEstateMarket.Infrastructure.Migrations
{
    [DbContext(typeof(RealEstateMarketContext))]
    [Migration("20230317100747_int-fix")]
    partial class intfix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RealEstateMarket.Domain.Entities.RealEstate", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("HouseNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.ToTable("RealEstates");

                    b.HasData(
                        new
                        {
                            Guid = new Guid("8df097c3-ec03-4ba7-bb89-687e7f9f9653"),
                            City = "Budapest",
                            Description = "leírás",
                            Email = "lorem@ipsum.net",
                            HouseNumber = 10L,
                            Phone = "+36301234567",
                            Price = 50000000L,
                            Region = "Pest",
                            StreetName = "Petőfi Sándor utca",
                            ZipCode = 1234
                        },
                        new
                        {
                            Guid = new Guid("bffe48ce-29e2-4379-b577-9f8cd5946976"),
                            City = "Budapest",
                            Description = "leírás",
                            HouseNumber = 10L,
                            Phone = "+36302345678",
                            Price = 380000000L,
                            Region = "Pest",
                            StreetName = "Kossuth Lajos utca",
                            ZipCode = 1234
                        },
                        new
                        {
                            Guid = new Guid("73360b15-5956-4f22-ac80-e22bcc434920"),
                            City = "Zalaegerszeg",
                            Description = "leírás2",
                            HouseNumber = 335L,
                            Price = 29000000L,
                            Region = "Zala",
                            StreetName = "Arany János út",
                            ZipCode = 8900
                        });
                });

            modelBuilder.Entity("RealEstateMarket.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Guid");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
