// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealEstateMarket.Infrastructure.Data;

#nullable disable

namespace RealEstateMarket.Infrastructure.Migrations
{
    [DbContext(typeof(RealEstateMarketContext))]
    partial class RealEstateMarketContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RealEstateMarket.Domain.Entities.RealEstate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("HouseNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("ZipCode")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("RealEstates");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80482d63-baf3-4a50-9bf8-86934f9f3776"),
                            City = "Budapest",
                            Description = "leírás",
                            Email = "lorem@ipsum.net",
                            HouseNumber = 10L,
                            Phone = "+36301234567",
                            Price = 50000000L,
                            Region = "Pest",
                            StreetName = "Petőfi Sándor utca",
                            ZipCode = (short)1234
                        },
                        new
                        {
                            Id = new Guid("1e48bfd5-00cb-40eb-91f3-b99af0aa5d96"),
                            City = "Budapest",
                            HouseNumber = 10L,
                            Phone = "+36302345678",
                            Price = 380000000L,
                            Region = "Pest",
                            StreetName = "Kossuth Lajos utca",
                            ZipCode = (short)1234
                        },
                        new
                        {
                            Id = new Guid("aa12f167-87a9-4c87-8d3b-e87b47705d65"),
                            City = "Zalaegerszeg",
                            Description = "leírás2",
                            HouseNumber = 335L,
                            Price = 29000000L,
                            Region = "Zala",
                            StreetName = "Arany János út",
                            ZipCode = (short)8900
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
